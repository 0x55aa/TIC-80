version: '{build}'
image: Visual Studio 2019

environment:
  matrix:
    - COMPILER: win32-xp
    - COMPILER: win64-xp
    - COMPILER: win32
    - COMPILER: win64
  BUILD_TYPE: MinSizeRel
  VS_CONF: Visual Studio 16 2019

install: 
  - git submodule update --init --recursive

build_script:
  - mkdir out && cd out
  - if [%COMPILER%]==[win32-xp] cmake -G "%VS_CONF%" -A Win32 -T v141_xp -DCMAKE_BUILD_TYPE=%BUILD_TYPE% ..
  - if [%COMPILER%]==[win64-xp] cmake -G "%VS_CONF%" -A x64 -T v141_xp -DCMAKE_BUILD_TYPE=%BUILD_TYPE% ..
  - if [%COMPILER%]==[win32] cmake -G "%VS_CONF%" -A Win32 -DCMAKE_BUILD_TYPE=%BUILD_TYPE% ..
  - if [%COMPILER%]==[win64] cmake -G "%VS_CONF%" -A x64 -DCMAKE_BUILD_TYPE=%BUILD_TYPE% ..
  - cmake --build . --parallel --config %BUILD_TYPE%

after_build:
  7z a tic80.zip %APPVEYOR_BUILD_FOLDER%\out\bin\tic80.exe

on_success:
- ps: $env:DATE=[TimeZoneInfo]::ConvertTimeBySystemTimeZoneId([DateTime]::UtcNow, "Belarus Standard Time").ToString('yyyy.MM.dd')
- ps: $env:TIME=[TimeZoneInfo]::ConvertTimeBySystemTimeZoneId([DateTime]::UtcNow, "Belarus Standard Time").ToString('HH:mm:ss')
- cmd: >-
    set BUILDS_SERVER_PATH=%BUILD_SERVER%/files/%APPVEYOR_REPO_BRANCH%/%DATE%/win
              
    curl --retry 3 --ftp-create-dirs -T tic80.zip %BUILDS_SERVER_PATH%/tic80-%COMPILER%.zip || true
